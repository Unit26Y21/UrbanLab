/**
 * File:    ecology.cga
 * Created: 27 Oct 2021 16:57:21 GMT
 * Author:  Nathan Laveu
 */

version "2021.0"

import plants: "plants.cga"
import meterConverter: "MeterToFeet.cga"

####### CONSTANTS ########

#Scenario 1:
#Since this is a value that changes depending on the scenario, it should be an attribute
#const RainfallIntensity = 0.025
#Rainfall Intensity to be 3 scenarios (0.025m,0.050m, 0.075m)

####### ATTRIBUTES #######
@Enum(0.083, 0.16, 0.25) 
#use enum to capture the three options
attr rainfallIntensity = meterConverter.feet (0.083)

@Hidden
attr runoffSavings = meterConverter.feet (0)

@Hidden 
attr roofArea = 0


#AssignSoilGrade
@Enum("GradeZero", "GradeOne", "GradeTwo", "GradeThree", "GradeFour") #considerusing integers instead of strings in the future.
attr soilGrade =
	50%: SoilGradeCoefficient("GradeOne")
	30%: SoilGradeCoefficient("GradeTwo")
	10%: SoilGradeCoefficient("GradeThree")
	10%: SoilGradeCoefficient("GradeFour")
	else: SoilGradeCoefficient("GradeZero")

/*#Assign seedColor	
attr seedColor =
case vegtype == "plant1" : "#EB5279"
case vegtype == "plant2" : "#EBA052"
case vegtype == "plant3" : "#00D100"
case vegtype == "plant4" : "#21B6A8" #BlueGreen
case vegtype == "plant5" : "#A3EBB1" #NeonGreen
case vegtype == "plant6" :
case vegtype == "plant7" :
case vegtype == "plant8" :
case vegtype == "plant9" :
case vegtype == "plant10":
else: "#FFFFFF"*/
 


####### RULES #######

    
/*CourtyardBuilding-->
offset(-3, inside)
    shapeO(myFrontDepth,myRightWidth,myBackDepth,myLeftWidth) { shape : Footprint | remainder: NIL }

Footprint -->
    extrude(rand(10,20)) color(1,0,0)*/
    
/*@StartRule
CourtyardBuilding -->
	shapeO(4,4,4,14) { shape : Lot| remainder: NIL }*/

	


	

@StartRule
Lot -->
	#extrude(rand(10, 80))
	report("height", geometry.height())
	report("volume", geometry.volume)
	#SelectVerticalSurfaces
	SelectTopSurfaces
	SelectBalconies
	PlantOnFacades
	
#SelectVerticalSurfaces-->
	#comp(f){side: ReportVericalSurfaces}

#PlantOnFacades -->
#	plants.ScatterFacadeVeg(50,"#116530")

@StartRule#Roofs
SelectTopSurfaces -->
	comp(f){top: ReportTopSurfaces}
	
	
ReportTopSurfaces -->
	set(roofArea, meterConverter.sqmeterTosqft(geometry.area()))#lets report the roof area here, in case you do some offsets, setbacks or other geomtric manipulations
	report("Roofarea", roofArea) #use the attribute instead of calculating on the fly so you reduce bug finding.
	report("Soil Grade", soilGrade)
	
	set(rainfallIntensity, meterConverter.feet(geometry.height()))
	#report runoff saving will go here:
	set(runoffSavings, ReportRunoffSavings(rainfallIntensity, roofArea, soilGrade)) # you set the attribute to a new number using your function from below
	report("Runoff Savings", runoffSavings)
	#PlantSeedsOnRoof

PlantSeedsOnRoof -->
	###pinks###
	
	/*plants.scatterSeeds(50, "#EB5279")
	plants.scatterSeeds(50, "#EBA052")
	#plants.scatterSeeds(50, "#00D100")#neon green
	plants.scatterSeeds(50, "#131c25")#fern-grey1
	plants.scatterSeeds(50, "#d0d6dd")#fern-grey2
	plants.scatterSeeds(50, "#ff84a6")#filter-pink1      
	plants.scatterSeeds(50, "#ff84a6")#shrub-purple1
    plants.scatterSeeds(50, "#ff84a6")#shrub-purple2
 	plants.scatterSeeds(50, "#5b9aa0")#blue
 	plants.scatterSeeds(50, "#FF0000")
    plants.scatterSeeds(50, "#7BCC70")  */
    
 ###Greens###
 #00FFFF	
	 plants.scatterSeeds(50,"#7FFFD4" ) #Aquamarine	
	 plants.scatterSeeds(50,"#454B1B" )#Army Green		
	 plants.scatterSeeds(50, "#088F8F")#Blue Green		
	 plants.scatterSeeds(50, "#AAFF00")#Bright Green		
	 plants.scatterSeeds(50, "#5F9EA0")Cadet Blue		
	 plants.scatterSeeds(50, "#097969")Cadmium Green		
	 plants.scatterSeeds(50,"#AFE1AF" )Celadon		
	 plants.scatterSeeds(50, "#DFFF00")Chartreuse		
	 plants.scatterSeeds(50, "#E4D00A")Citrine		
	 plants.scatterSeeds(50, "#00FFFF")Cyan		
	 plants.scatterSeeds(50, "#023020")Dark Green		
	 plants.scatterSeeds(50, "#7DF9FF")Electric Blue		
	#Emerald Green	#50C878	
	#Eucalyptus	#5F8575	
	#Fern Green	#4F7942	
	#Forest Green	#228B22	
	#Grass Green	#7CFC00	
	#Green	#008000	
	#Hunter Green	#355E3B	
	#jade	#00A36C	
	
	
	/*
	Jungle Green	#2AAA8A	rgb(42, 170, 138)
	Kelly Green	#4CBB17	rgb(76, 187, 23)
	Light Green	#90EE90	rgb(144, 238, 144)
	Lime Green	#32CD32	rgb(50, 205, 50)
	Lincoln Green	#478778	rgb(71, 135, 120)
	Malachite	#0BDA51	rgb(11, 218, 81)
	Mint Green	#98FB98	rgb(152, 251, 152)
	Moss Green	#8A9A5B	rgb(138, 154, 91)
	Neon Green	#0FFF50	rgb(15, 255, 80)
	Nyanza	#ECFFDC	rgb(236, 255, 220)
	Olive Green	#808000	rgb(128, 128, 0)
	Pastel Green	#C1E1C1	rgb(193, 225, 193)
	Pear	#C9CC3F	rgb(201, 204, 63)
	Peridot	#B4C424	rgb(180, 196, 36)
	Pistachio	#93C572	rgb(147, 197, 114)
	Robin Egg Blue	#96DED1	rgb(150, 222, 209)
	Sage Green	#8A9A5B	rgb(138, 154, 91)
	Sea Green	#2E8B57	rgb(46, 139, 87)
	Seafoam Green	#9FE2BF	rgb(159, 226, 191)
	Shamrock Green	#009E60	rgb(0, 158, 96)
	Spring Green	#00FF7F	rgb(0, 255, 127)
	Teal	#008080	rgb(0, 128, 128)
	Turquoise	#40E0D0	rgb(64, 224, 208)
	Vegas Gold	#C4B454	rgb(196, 180, 84)
	Verdigris	#40B5AD	rgb(64, 181, 173)
	Viridian	#40826D	rgb(64, 130, 109)   
	    
	  */  
 
####### FUNCTIONS #######
# AssignSoilGradeCoefficient Function
SoilGradeCoefficient(gradeType) =
	case gradeType == "GradeOne": 0.1
	case gradeType == "GradeTwo":  0.2
	case gradeType == "GradeThree": 0.3
	case gradeType == "GradeFour": 0.4
	else: 0 #what happens with Grade zero?
	
#Savings should be a function not a rule
#careful where you put the parenthesis and the multiplications, you might get different results...
ReportRunoffSavings(rainfallIntensity, roofArea, soilGrade) = rainfallIntensity * roofArea - (soilGrade * rainfallIntensity * roofArea)
	
	


	
