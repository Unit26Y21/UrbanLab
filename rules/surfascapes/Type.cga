/**
 * File:    Type.cga
 * Created: 14 Nov 2021 18:39:17 GMT
 * Author:  skamins000
 */

version "2021.0"

import meterConverter: "meterToFeet.cga"
#	Do not copy paste. Import the rule like the example above. if you want to use a function call it the following way:
# 	meterConverter.feet(yourValue)
#	meterConverter.sqmeterTosqft(yourValue)
# 	see the rule file for full functionality and documentation

### Constants ###
const textureFolder =  "/Urbanlab/data/" 

@Enum("A", "B", "C", "D", "E", "F")
attr type = "A"

### Attributes ###

#create attrubute widths for the type splits
@Range (min=2, max=10)
attr floraHydro_width = meterConverter.feet(2)
attr service_width = meterConverter.feet(10)

@Range (min=6, max=20)
attr pedestrian_width = meterConverter.feet(6)
attr shoulder_width = meterConverter.feet(9)
attr bike_width = meterConverter.feet(6)

### Functions ###

#split type A into parts, greenways, two bike lanes, shoulder, two car lames, another shoulder and another greenway
@StartRule
Types-->
	case type == "A":
		split(v, unitSpace, 0){ floraHydro_width : floraHydroColor scatterfloraHydro	// first greenway
							| bike_width : bikeColor  		// first bike path
							| bike_width : bikeColor  		// second bike path
							| shoulder_width : shoulderColor	 	// first shoulder
							| service_width : serviceColor 		// first service road
							| service_width : serviceColor 	// second service road
							| shoulder_width : shoulderColor 		 	// second shoulder
							| floraHydro_width  : floraHydroColor scatterfloraHydro}  	// second greenway

	#split into parts, shoulder, two car lanes, another shoulder and two bike lanes
	case type == "B":
		split(v, unitSpace, 0){ shoulder_width : shoulderColor 	// first shoulder
							| service_width : serviceColor 		// first service road
							| service_width : serviceColor 		// second service road
							| shoulder_width : shoulderColor 	 	// second shoulder
							| bike_width : bikeColor  		// first bike path
							| bike_width : bikeColor} 		// second bike path


	case type == "C":
		split(v, unitSpace, 0){ floraHydro_width : floraHydroColor	// first greenway
						 	| pedestrian_width : pedestrianColor		 	// first pedestrian way
							| bike_width : bikeColor  		// first bike path
							| bike_width : bikeColor		// second bike path
							| pedestrian_width : pedestrianColor 	 	// second pedestrian way
							| floraHydro_width  : floraHydroColor}	// second greenway

	case type == "D":
		split(v, unitSpace, 0){ bike_width : bikeColor 		// first bike path
				| bike_width : bikeColor 			// second bike path
			 	| pedestrian_width : pedestrianColor} 	 	// pedestrian way
		 	
		 	
	case type == "E": # Type E is only pedestrian so does not need split up
		NIL
	
	case type == "F":
		split(v, unitSpace, 0){floraHydro_width : floraHydroColor  	// greenway
		| pedestrian_width : pedestrianColor }		 	// pedestrian way

	else:
		NIL

floraHydroColor-->
	tileUV(0,~4,~4) texture("/UrbanLab/data/assets/tileable_classic_grass_and_dirt_texture_-_grass_texture.jpg")
bikeColor-->
	tileUV(0,0,0) color("#FDC700")

shoulderColor-->
	tileUV(0,0,0) color("#999999")
 
 pedestrianColor-->
 	tileUV(0,14,14) texture("/UrbanLab/data/assets/path-wood-street-ground-texture-floor-image.jpg")
 	
 serviceColor-->
 tileUV(0,14,14) texture("/ESRI.lib/assets/Streets/Lanes/asphalt_14x14m.jpg")
 
 scatterfloraHydro-->
 	scatter (surface, 50, uniform){treeObject}
 	
 treeObject-->
 s(5,5,5 )
 i("/UrbanLab/data/assets/Lowpoly_tree_sample.dae")
 